{"project": "fast-histogram", "project_url": "https://github.com/astrofrog/fast-histogram", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"0": "98a8ac1858e6cc93d5d4375b6bf884e7d5c41625", "1": "9557ece683b92e7abfdc929d3f5447d33086a170", "2": "3d9de89e7031c287d16bd48b0af933669f5ad4eb", "3": "dc6e8a9781fc20f5b3b4599ca63a59a5d78de94d", "4": "98ef20df1075d8b0fb3328541acf2be77dcd11ac", "5": "9a6b385b4dce96dce107fb0da811cadb4bda7b5f", "6": "e397f71c923039423d70a227249d26b4fac7dff5", "7": "b1913fd7b3e6061deb65f8f7de0e95a454977270", "8": "cbe3a1885f2ac2a490c8bc4bc71b0153a12c65f0", "9": "22d900becc3d39a846cca09974399306554d990e", "10": "d27495c4dca2b560d2ac70b24d8a5e9c03281fd6", "11": "3de40da3ea1755c6d3cb17729b20935f36a8099e", "12": "6f7a3cebad20eaa492ec0d2e07dcd17b2838ad83", "13": "72e993c9be6b31971ebde9206934bb6ae9e2bed0", "14": "3f831fb866e27d233d638c2cb87a9b48469a6efa", "15": "1d06938b7e9264ff73cf7fbf093475bdd828b3ab", "16": "66c9ab35232d1e09f53a1147b3185e4700e36449", "17": "d7d6acfb5e23cc4dcdb90eb503cbdab269c0e486", "18": "99cae6658a69aa5d79d18ff5f4d0da46bd52cc22", "19": "56a839a47b2cf25a7e0822d1cdbbfc28665a87c6", "20": "8f412a826bd95520e6b097f80c0e829e8df726e7", "21": "816d8858f48acd0c1baa1e4773c16cc63e17b259", "22": "3f4a8fe48e1d16fce089a79d0287154b6a1c6af9", "23": "49ff7609560a960c356346630a238be5938a61e9", "24": "b08e7dda368ce87a837ed9da270ab237683a013a", "25": "e69bbc8b2c3fd7289507d522723931a4ab8cc79b", "26": "0bd667e28d26d49558583e2cb3fc6f89355d0472", "27": "a9f37e01032330e4e284be78f950486a680bd9fc", "28": "123c2508a2ef17d260228f1c8ebcad2513cc9d50", "29": "e2d5509984b7a8238e9cfc91f7d0f9a69f205e0a", "30": "58cf5cec7165ac4222b39d49a4c2380df3774b1f", "31": "e295874f4e7c1eb56b93edcbf197cf0ae5a8a019", "32": "859ef6c66da795b1ff2ccd28cb68091850c8d1fe", "33": "5e5b58204b26095d696f46664c85db30f260f7a3", "34": "5da5e01cb132410656ea7772833b06443d73774a", "35": "107607776f06dafb0038b390a9a586d277519dbf", "36": "46b96c1c641c8d8c426a38e0dbdd35e5300a4a1b", "38": "304c512dd1ecd035346021f3f6f911065a4ca4d1", "40": "f28fe3fe9e7d5d27c2b86625022dd31779c9da75", "42": "4806274b750077927395038fb8b10ef8ed7ff641", "46": "7eea79ba72d73a5ed02f607b1e7cbc39880941cc", "47": "1cce9e12671307e87b39c708841a7230818e577b", "49": "689d950366b808f8d1bb6071ca9bc5fec467b420", "53": "ad1e1de8f25566df1960484a8edc9854a19951c9", "54": "5f874ea8724894c2893ab4931ea24e983f10cede", "55": "d8f304721eb54972c1ebd5718e96bdc2d996a592", "56": "622a34cac97b433cd1ad6947b7b262bad9502a0e", "64": "dfff2b38b907154c723b44d3b994969a527b125c", "65": "73ea5e34db62630fe3b722933c1471467969f343", "66": "76b6f57a27f31cdefc23444f91611a00c9b4332d", "72": "e384cdf1fec4ee65a594ca4e91478eb3c98b2d18", "79": "755162d5fe768e0878f89f365fa8016b1292066c", "90": "11a4d1e3d640b543cdc497d4ff8f20443b3e2ba2", "93": "51991b53990f5ae8eddd770c02e8933e5169c13e", "95": "f216cbd9ab18b8563f912bf6fcf4b7e0fdb2f735", "102": "502b4afe21ccb303c5d7e59eff21c0386055195d", "105": "8c35efe2c1030cb4775fe46b28a03c7621e2b173", "108": "e6aa8c644d631751bcc0eeeeb05e06d8cd9507bf", "111": "8e0d3b123b80d22779bdf918540e5ff353a23bda", "112": "e4b7e382bd9bd0b7270fe95e1b33a1637d12deb0", "113": "6fd41e7bc2f8a12fcf26135b8c7ad37c06f38d73"}, "revision_to_date": {"0": 1500314068000, "1": 1500314241000, "2": 1500314290000, "3": 1500323445000, "4": 1500324094000, "5": 1500376918000, "6": 1500377283000, "7": 1500377312000, "8": 1500377373000, "9": 1500377655000, "10": 1500380765000, "11": 1500381373000, "12": 1500381723000, "13": 1500383915000, "14": 1500384609000, "15": 1500386612000, "16": 1500388487000, "17": 1500390071000, "18": 1500390461000, "19": 1500390699000, "20": 1500390792000, "21": 1500390860000, "22": 1500391148000, "23": 1500391479000, "24": 1500391644000, "25": 1500395734000, "26": 1500396399000, "27": 1500396530000, "28": 1500396639000, "29": 1500396715000, "30": 1500396799000, "31": 1500396931000, "32": 1500397132000, "33": 1500397253000, "34": 1500397649000, "35": 1500406239000, "36": 1500406273000, "38": 1500418520000, "40": 1500450491000, "42": 1500460661000, "46": 1500471959000, "47": 1500485734000, "49": 1508890142000, "53": 1509222729000, "54": 1509222810000, "55": 1509223579000, "56": 1509301582000, "64": 1518442646000, "65": 1518443756000, "66": 1518450252000, "72": 1531776004000, "79": 1531820952000, "90": 1531916637000, "93": 1531920210000, "95": 1531932858000, "102": 1532004436000, "105": 1532009313000, "108": 1537894181000, "111": 1537903421000, "112": 1537980472000, "113": 1537981535000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Celeron(R) CPU N3450 @ 1.10GHz"], "cython": [""], "machine": ["oneesk"], "nomkl": [""], "numpy": ["1.14"], "os": ["Ubuntu 16.04.3 LTS"], "python": ["3.6"], "ram": ["3885480"], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Celeron(R) CPU N3450 @ 1.10GHz", "cython": "", "machine": "oneesk", "nomkl": "", "numpy": "1.14", "os": "Ubuntu 16.04.3 LTS", "python": "3.6", "ram": "3885480", "branch": "master"}], "benchmarks": {"benchmarks.Histogram1D.time_histogram1d": {"code": "class Histogram1D:\n    def time_histogram1d(self, fast, dtype, size):\n        if fast:\n            try:\n                histogram1d(self.x, range=[-1, 2], bins=30)\n            except TypeError:  # old API\n                histogram1d(self.x, 30, -1, 2)\n        else:\n            np.histogram(self.x, range=[-1, 2], bins=30)\n\n    def setup(self, fast, dtype, size):\n        np.random.seed(12345)\n        self.x = (np.random.random(int(size)) * 10).astype(dtype)\n        self.w = (np.random.random(int(size)) * 10).astype(dtype)", "name": "benchmarks.Histogram1D.time_histogram1d", "number": 0, "param_names": ["fast", "dtype", "size"], "params": [["False", "True"], ["'>i4'", "'<f4'", "'>f8'", "'<f8'"], ["1000.0", "10000.0", "100000.0", "1000000.0", "10000000.0"]], "repeat": 0, "sample_time": 0.1, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e671e48b4a56eddab60af10f82912a1cba894468a35436c61fadd8f0a42c42ce", "warmup_time": -1}, "benchmarks.Histogram1D.time_histogram1d_weights": {"code": "class Histogram1D:\n    def time_histogram1d_weights(self, fast, dtype, size):\n        if fast:\n            histogram1d(self.x, range=[-1, 2], bins=30, weights=self.w)\n        else:\n            np.histogram(self.x, range=[-1, 2], bins=30, weights=self.w)\n\n    def setup(self, fast, dtype, size):\n        np.random.seed(12345)\n        self.x = (np.random.random(int(size)) * 10).astype(dtype)\n        self.w = (np.random.random(int(size)) * 10).astype(dtype)", "name": "benchmarks.Histogram1D.time_histogram1d_weights", "number": 0, "param_names": ["fast", "dtype", "size"], "params": [["False", "True"], ["'>i4'", "'<f4'", "'>f8'", "'<f8'"], ["1000.0", "10000.0", "100000.0", "1000000.0", "10000000.0"]], "repeat": 0, "sample_time": 0.1, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4ce26c3fa2d76232a71eb27de69cdc29c1877457e62f92774b7fd8b6376c6685", "warmup_time": -1}, "benchmarks.Histogram2D.time_histogram2d": {"code": "class Histogram2D:\n    def time_histogram2d(self, fast, dtype, size):\n        if fast:\n            try:\n                histogram2d(self.x, self.y, range=[[-1, 2], [-2, 4]], bins=30)\n            except TypeError:  # old API\n                histogram2d(self.x, self.y, 30, -1, 2, 30, -2, 4)\n        else:\n            np.histogram2d(self.x, self.y, range=[[-1, 2], [-2, 4]], bins=30)\n\n    def setup(self, fast, dtype, size):\n        np.random.seed(12345)\n        self.x = (np.random.random(int(size)) * 10).astype(dtype)\n        self.y = (np.random.random(int(size)) * 10).astype(dtype)\n        self.w = (np.random.random(int(size)) * 10).astype(dtype)", "name": "benchmarks.Histogram2D.time_histogram2d", "number": 0, "param_names": ["fast", "dtype", "size"], "params": [["False", "True"], ["'>i4'", "'<f4'", "'>f8'", "'<f8'"], ["1000.0", "10000.0", "100000.0", "1000000.0", "10000000.0"]], "repeat": 0, "sample_time": 0.1, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c74f482a09eda4dfdbb5380538077d3477a6a3ecfcbadbe3013737a0fb2602af", "warmup_time": -1}, "benchmarks.Histogram2D.time_histogram2d_weights": {"code": "class Histogram2D:\n    def time_histogram2d_weights(self, fast, dtype, size):\n        if fast:\n            histogram2d(self.x, self.y, range=[[-1, 2], [-2, 4]], bins=30, weights=self.w)\n        else:\n            np.histogram2d(self.x, self.y, range=[[-1, 2], [-2, 4]], bins=30, weights=self.w)\n\n    def setup(self, fast, dtype, size):\n        np.random.seed(12345)\n        self.x = (np.random.random(int(size)) * 10).astype(dtype)\n        self.y = (np.random.random(int(size)) * 10).astype(dtype)\n        self.w = (np.random.random(int(size)) * 10).astype(dtype)", "name": "benchmarks.Histogram2D.time_histogram2d_weights", "number": 0, "param_names": ["fast", "dtype", "size"], "params": [["False", "True"], ["'>i4'", "'<f4'", "'>f8'", "'<f8'"], ["1000.0", "10000.0", "100000.0", "1000000.0", "10000000.0"]], "repeat": 0, "sample_time": 0.1, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "321f640418ab3bae617c5a0d2b53a623adb06091393c79f6adffb711140c0af6", "warmup_time": -1}}, "machines": {"oneesk": {"arch": "x86_64", "cpu": "Intel(R) Celeron(R) CPU N3450 @ 1.10GHz", "machine": "oneesk", "os": "Ubuntu 16.04.3 LTS", "ram": "3885480", "version": 1}}, "tags": {"v0.1": 24, "v0.2": 27, "v0.2.1": 29, "v0.3": 54, "v0.4": 65, "v0.5": 112}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}